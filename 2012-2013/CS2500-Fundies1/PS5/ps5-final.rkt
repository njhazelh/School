#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 83 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
42 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 6163 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 176
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname ps5-final"
 #") (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t const"
 #"ructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"Nicholas Jones"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"Zachary Wassall"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"Assignment 5h"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"Honors Fundamentals of Computer Science 1"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"Due: 10/10/2012"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#######################################################"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#                LISTS AND MORE LISTS!                #"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#######################################################"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;; Problem A1 ;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 2 #" ("
0 0 14 3 3 #"zip"
0 0 23 3 1 #" "
0 0 14 3 8 #"humidity"
0 0 23 3 1 #" "
0 0 14 3 4 #"high"
0 0 23 3 1 #" "
0 0 14 3 3 #"low"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; A Weather is a (make-weather String Number Number Number)"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; Interpretation: "
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";;  The weather's zip is the 5-digit zip code where the data was col"
 #"lected."
) 0 0 23 29 1 #"\n"
0 0 17 3 43 #";;  The weather's humidity is a percentage."
0 0 23 29 1 #"\n"
0 0 17 3 63
#";;  The weather's high and low represent the day's high and low"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";;    temperatures in Fahrenheit."
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 7 #"wr-temp"
0 0 17 3 1 #" "
0 0 17 3 2 #"wr"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"  ..."
0 0 17 3 2 #" ("
0 0 17 3 11 #"weather-zip"
0 0 17 3 6 #"      "
0 0 17 3 2 #"wr"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 16 #"weather-humidity"
0 0 17 3 1 #" "
0 0 17 3 2 #"wr"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 12 #"weather-high"
0 0 17 3 5 #"     "
0 0 17 3 2 #"wr"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 11 #"weather-low"
0 0 17 3 6 #"      "
0 0 17 3 2 #"wr"
0 0 17 3 2 #") "
0 0 17 3 5 #"... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"19348\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"50"
0 0 23 3 2 #"  "
0 0 21 3 2 #"90"
0 0 23 3 2 #"  "
0 0 21 3 2 #"85"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr2"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"00000\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #"  "
0 0 21 3 2 #"32"
0 0 23 3 2 #"  "
0 0 21 3 2 #"15"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr3"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"00000\""
0 0 23 3 1 #" "
0 0 21 3 3 #"100"
0 0 23 3 2 #"  "
0 0 21 3 2 #"78"
0 0 23 3 2 #"  "
0 0 21 3 2 #"70"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr1-oct-3-2012"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"15"
0 0 23 3 2 #"  "
0 0 21 3 2 #"67"
0 0 23 3 2 #"  "
0 0 21 3 2 #"50"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr2-oct-3-2012"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02120\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"12"
0 0 23 3 2 #"  "
0 0 21 3 2 #"64"
0 0 23 3 2 #"  "
0 0 21 3 2 #"48"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr3-oct-3-2012"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"22"
0 0 23 3 2 #"  "
0 0 21 3 2 #"68"
0 0 23 3 2 #"  "
0 0 21 3 2 #"53"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;; Part 1 ;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; A LoWR is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;    - empty"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;    - (cons Weather LoWR)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"lowr-temp"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 4 #"list"
0 0 17 3 2 #") "
0 0 17 3 5 #"... ]"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"        [else ... (first list) ..."
0 0 17 29 1 #"\n"
0 0 17 3 50 #"              ... (lowr-temp (rest  list)) ... ]))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr3"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr2"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr4"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr3"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 15 #"lowr-oct-3-2012"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr1-oct-3-2012"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr2-oct-3-2012"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr3-oct-3-2012"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;; Part 2 ;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; HELPER FUNCTION"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; muggy?  : Weather Number Number -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; Purpose : Determines if the given weather record represents muggy"
 #" conditions "
) 0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";;           (both the given weather's humidity and high temperature"
 #" are greater"
) 0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";;           than or equal to the given humidity and high temperatur"
 #"e "
) 0 0 23 29 1 #"\n"
0 0 17 3 38 #";;           thresholds, respectively)"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";;    wr1 100 100 -> false"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";;    wr1  10 100 -> false"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";;    wr1  60  10 -> false"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;    wr1  10  10 -> true"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"muggy?"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #" "
0 0 14 3 15 #"humid-threshold"
0 0 23 3 1 #" "
0 0 14 3 14 #"temp-threshold"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 16 #"weather-humidity"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 14 3 15 #"humid-threshold"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 2 #">="
0 0 23 3 2 #" ("
0 0 14 3 12 #"weather-high"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 14 3 14 #"temp-threshold"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"muggy?"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 1 #" "
0 0 21 3 3 #"100"
0 0 23 3 1 #" "
0 0 21 3 3 #"100"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"muggy?"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 1 #" "
0 0 21 3 3 #"100"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"muggy?"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #"  "
0 0 21 3 2 #"60"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"muggy?"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; muggy   : LoWR Number Number -> LoWR"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; Purpose : Produces a list of only those weather records in the gi"
 #"ven list of"
) 0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";;           weather records that represent muggy conditions accordi"
 #"ng to the "
) 0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";;           given humidity and high temperature thresholds (see mug"
 #"gy?)"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;    lowr1   0   0 -> empty"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;    lowr2  50  10 -> empty"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;    lowr3  10  10 -> lowr3"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    lowr4  50  70 -> "
0 0 17 3 1 #"("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 3 #"wr1"
0 0 17 3 2 #" ("
0 0 17 3 16 #"cons wr3 empty))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"muggy"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #" "
0 0 14 3 15 #"humid-threshold"
0 0 23 3 1 #" "
0 0 14 3 14 #"temp-threshold"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 2 #") "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 6 #"muggy?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 2 #") "
0 0 14 3 15 #"humid-threshold"
0 0 23 3 1 #" "
0 0 14 3 14 #"temp-threshold"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 3 #") ("
0 0 14 3 5 #"muggy"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                   "
0 0 14 3 15 #"humid-threshold"
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                   "
0 0 14 3 14 #"temp-threshold"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"muggy"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 14 3 15 #"humid-threshold"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 14 3 14 #"temp-threshold"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"muggy"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr1"
0 0 23 3 3 #"   "
0 0 21 3 1 #"0"
0 0 23 3 3 #"   "
0 0 21 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"muggy"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr2"
0 0 23 3 2 #"  "
0 0 21 3 2 #"60"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"muggy"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr3"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #") "
0 0 14 3 5 #"lowr3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"muggy"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr4"
0 0 23 3 2 #"  "
0 0 21 3 2 #"50"
0 0 23 3 2 #"  "
0 0 21 3 2 #"70"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr3"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;; Part 3 ;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; HELPER FUNCTION"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";; adjust-temp : Weather Number -> Weather"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; Purpose     : Produces a weather record from the given weather re"
 #"cord, in "
) 0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";;              which the given number is added to the high and low "
 #"temperatures"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";;    wr2 3             -> (make-weather \"00000\"  10  35  18)"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";;    wr1-oct-3-2012 -4 -> (make-weather "
0 0 17 3 20 #"\"02138\"  15  63  46)"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";;    wr3-oct-3-2012 -4 -> (make-weather \"02138\"  22  64  49)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"adjust-temp"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #" "
0 0 14 3 10 #"adjustment"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"make-weather"
0 0 23 3 2 #" ("
0 0 14 3 11 #"weather-zip"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 16 #"weather-humidity"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 12 #"weather-high"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 14 3 10 #"adjustment"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 11 #"weather-low"
0 0 23 3 1 #" "
0 0 14 3 7 #"weather"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 14 3 10 #"adjustment"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"adjust-temp"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"00000\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #"  "
0 0 21 3 2 #"35"
0 0 23 3 2 #"  "
0 0 21 3 2 #"18"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"adjust-temp"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr1-oct-3-2012"
0 0 23 3 1 #" "
0 0 21 3 2 #"-4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"15"
0 0 23 3 2 #"  "
0 0 21 3 2 #"63"
0 0 23 3 2 #"  "
0 0 21 3 2 #"46"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"adjust-temp"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr3-oct-3-2012"
0 0 23 3 1 #" "
0 0 21 3 2 #"-4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"22"
0 0 23 3 2 #"  "
0 0 21 3 2 #"64"
0 0 23 3 2 #"  "
0 0 21 3 2 #"49"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; adjust-temps : LoWR String Number -> LoWR"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; Purpose      : Produces a list of weather records that contains a"
 #"ll the "
) 0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";;                weather records in the given list but with the giv"
 #"en "
) 0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";;                adjustment number added to the high and low temper"
 #"atures in "
) 0 0 23 29 1 #"\n"
0 0 17 3 21 #";;                any"
0 0 17 3 1 #" "
0 0 17 3 7 #"records"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"given"
0 0 17 3 1 #" "
0 0 17 3 3 #"zip"
0 0 17 3 1 #" "
0 0 17 3 12 #"code string."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;    lowr2 \"00000\" 3"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;        -> lowr2"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;    lowr3 \"00000\" 3"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;        ->"
0 0 17 3 10 #" (cons wr1"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cons ("
0 0 17 3 12 #"make-weather"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"00000\""
0 0 17 3 2 #"  "
0 0 17 3 2 #"10"
0 0 17 3 2 #"  "
0 0 17 3 2 #"35"
0 0 17 3 2 #"  "
0 0 17 3 11 #"18) empty))"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";;    lowr-oct-3-2012 \"02138\" -4"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;        -> (cons "
0 0 17 3 34 #"(make-weather \"02138\"  15  63  46)"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;                 (cons wr2-oct-3-2012"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";;                       (cons "
0 0 17 3 1 #"("
0 0 17 3 12 #"make-weather"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"02138\""
0 0 17 3 2 #"  "
0 0 17 3 2 #"22"
0 0 17 3 2 #"  "
0 0 17 3 16 #"64  49) empty)))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"adjust-temps"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #" "
0 0 14 3 3 #"zip"
0 0 23 3 1 #" "
0 0 14 3 10 #"adjustment"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"zip"
0 0 23 3 2 #" ("
0 0 14 3 11 #"weather-zip"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 11 #"adjust-temp"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                            "
0 0 14 3 10 #"adjustment"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"adjust-temps"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 14 3 3 #"zip"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 14 3 10 #"adjustment"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 12 #"adjust-temps"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 4 #"lowr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 14 3 3 #"zip"
0 0 23 29 1 #"\n"
0 0 23 3 34 #"                                  "
0 0 14 3 10 #"adjustment"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"adjust-temps"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"00000\""
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"lowr2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"adjust-temps"
0 0 23 3 1 #" "
0 0 14 3 5 #"lowr3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"00000\""
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wr1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"00000\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"10"
0 0 23 3 2 #"  "
0 0 21 3 2 #"35"
0 0 23 3 2 #"  "
0 0 21 3 2 #"18"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"adjust-temps"
0 0 23 3 1 #" "
0 0 14 3 15 #"lowr-oct-3-2012"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 1 #" "
0 0 21 3 2 #"-4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"15"
0 0 23 3 2 #"  "
0 0 21 3 2 #"63"
0 0 23 3 2 #"  "
0 0 21 3 2 #"46"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 14 #"wr2-oct-3-2012"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-weather"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"02138\""
0 0 23 3 2 #"  "
0 0 21 3 2 #"22"
0 0 23 3 2 #"  "
0 0 21 3 2 #"64"
0 0 23 3 2 #"  "
0 0 21 3 2 #"49"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;; Problem A2 ;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; A LoN is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;    - empty"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;    - (cons Number LoN)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"lon-temp"
0 0 17 3 1 #" "
0 0 17 3 3 #"lon"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lon"
0 0 17 3 2 #") "
0 0 17 3 5 #"... ]"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ["
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 6 #" lon) "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 10 #"  lon) ..."
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 8 #"lon-temp"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 3 #"lon"
0 0 17 3 10 #")) ... ]))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; A Evens-Interval is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;    - 'invalid-interval"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;    - 'none"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;    - LoN"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"ei-temp"
0 0 23 3 1 #" "
0 0 14 3 2 #"ei"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 2 #"ei"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"invalid-interval"
0 0 23 3 1 #" "
0 0 14 3 2 #"ei"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 4 #" ]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; HELPER FUNCTION"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";; list-evens-in-interval : Number Number -> LoN"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; Purpose                : Produces a list of numbers containing al"
 #"l even "
) 0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";;                          numbers in the half-open interval bounde"
 #"d by the"
) 0 0 23 29 1 #"\n"
0 0 17 3 33 #";;                          first"
0 0 17 3 42 #" given number (start) and the second given"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";;                          number"
0 0 17 3 2 #" ("
0 0 17 3 4 #"end)"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";;    1  7 -> (cons 2 (cons 4 (cons 6 empty)))"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;    1  1 -> empty"
0 0 23 29 1 #"\n"
0 0 17 3 55 #";;    2 10 -> (cons 2 (cons 4 (cons 6 (cons 8 empty))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                 "
0 0 14 3 3 #"end"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                       "
0 0 14 3 3 #"end"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"7"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"6"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"6"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"8"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; HELPER FUNCTION"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; even-in-interval? : Number Number -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; Purpose           : Determines if there are any even numbers in t"
 #"he valid "
) 0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";;                     half-open interval bounded by the first given"
 #" number "
) 0 0 23 29 1 #"\n"
0 0 17 3 64
#";;                     (start) and the second given number (end)"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;    2 3 -> true"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;    1 3 -> true"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;    1 2 -> false"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"even-in-interval?"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #") "
0 0 21 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 2 #") "
0 0 21 3 1 #"1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"even-in-interval?"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"even-in-interval?"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"even-in-interval?"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; evens-in-interval : Number Number -> Evens-Interval"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; Purpose           : Produces a Evens-Interval from the half-open "
 #"interval "
) 0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";;                     bounded by the first given number (start) and"
 #" the second "
) 0 0 23 29 1 #"\n"
0 0 17 3 42 #";;                     given number (end)."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";;    (evens-in-interval 1  1) -> 'invalid-interval"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;    (evens-in-interval 1  2) -> 'none"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";;    (evens-in-interval 2 10) -> "
0 0 17 3 1 #"("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 11 #"8 empty))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"evens-in-interval"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 16 #"invalid-interval"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 17 #"even-in-interval?"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 22 #"list-evens-in-interval"
0 0 23 3 1 #" "
0 0 14 3 5 #"start"
0 0 23 3 1 #" "
0 0 14 3 3 #"end"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"evens-in-interval"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"  "
0 0 21 3 1 #"1"
0 0 23 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 16 #"invalid-interval"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"evens-in-interval"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"  "
0 0 21 3 1 #"2"
0 0 23 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"none"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 17 #"evens-in-interval"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 2 #"10"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 29 1 #"\n"
0 0 23 3 46 #"                                             ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"6"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 21 3 1 #"8"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#######################################################"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#             GRAPHICAL EDITOR, REVISITED             #"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#######################################################"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; REQUIREMENTS AND CONSTANTS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; REQUIREMENTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; CONSTANTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_WIDTH"
0 0 23 3 1 #" "
0 0 21 3 3 #"200"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"EDITOR_HEIGHT"
0 0 23 3 1 #" "
0 0 21 3 2 #"33"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_SCENE"
0 0 23 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_WIDTH"
0 0 23 3 1 #" "
0 0 14 3 13 #"EDITOR_HEIGHT"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_PAD_X"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_PAD_Y"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"CURSOR_HEIGHT"
0 0 23 3 1 #" "
0 0 21 3 2 #"25"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 12 #"CURSOR_IMAGE"
0 0 23 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 13 #"CURSOR_HEIGHT"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #"; DATA DEFINITIONS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; A 1String is a string of length one"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 9 #"Lo1String"
0 0 23 3 2 #" ("
0 0 14 3 7 #"1String"
0 0 23 3 1 #" "
0 0 14 3 9 #"Lo1String"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; An Lo1String is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;   - empty"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";;   - (cons 1String Lo1String)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"Lo1String-temp"
0 0 17 3 1 #" "
0 0 17 3 4 #"lo1s"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"lo1s"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 2 #"  "
0 0 17 3 4 #"lo1s"
0 0 17 3 2 #") "
0 0 17 3 3 #"..."
0 0 17 3 2 #" )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLES"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"e1pre"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"e1post"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"e2pre"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"e2post"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"longpre"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 42 #"))))))))))))))))))))))))))))))))))))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"longpost"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 6 #"editor"
0 0 23 3 2 #" ("
0 0 14 3 3 #"pre"
0 0 23 3 1 #" "
0 0 14 3 4 #"post"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; An Editor is a (make-editor Lo1String Lo1String) with:"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";;     pre  : The text before the cursor"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;     post : The text after the cursor"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"editor-temp"
0 0 23 3 1 #" "
0 0 14 3 6 #"editor"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 2 #"  "
0 0 14 3 6 #"editor"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 6 #"editor"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLES"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 1 #" "
0 0 14 3 5 #"e1pre"
0 0 23 3 1 #" "
0 0 14 3 6 #"e1post"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 1 #" "
0 0 14 3 5 #"e2pre"
0 0 23 3 1 #" "
0 0 14 3 6 #"e2post"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"nopre"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"nopost"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"long"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 1 #" "
0 0 14 3 7 #"longpre"
0 0 23 3 1 #" "
0 0 14 3 8 #"longpost"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #"; LIST MANIPULATION FUNCTIONS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; last    : LoSomething -> Something"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";; Purpose : Returns the last value in the given non-empty list"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;    e1pre -> \" \""
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;    e2pre -> \"4\""
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"last"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"last"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"last"
0 0 23 3 1 #" "
0 0 14 3 5 #"e1pre"
0 0 23 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"last"
0 0 23 3 1 #" "
0 0 14 3 5 #"e2pre"
0 0 23 3 2 #") "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; all-but-last : LoSomething -> LoSomething"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; Purpose      : Removes the last value from the given non-empty li"
 #"st"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;    e1pre -> (cons \""
0 0 17 3 1 #"h"
0 0 17 3 9 #"\" (cons \""
0 0 17 3 43 #"e\" (cons \"l\" (cons \"l\" (cons \"o\" empty)))))"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;    e2pre -> (cons \""
0 0 17 3 42 #"0\" (cons \"1\" (cons \"2\" (cons \"3\" empty))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 12 #"all-but-last"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 23 3 1 #" "
0 0 14 3 5 #"e1pre"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 23 3 1 #" "
0 0 14 3 5 #"e2pre"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; cons-tail : LoSomething Something -> LoSomething"
0 0 23 29 1 #"\n"
0 0 17 3 67
#";; Purpose   : Appends the given value to the end of the given list"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;    e1pre \""
0 0 17 3 1 #"w"
0 0 17 3 12 #"\" -> (cons \""
0 0 17 3 1 #"h"
0 0 17 3 9 #"\" (cons \""
0 0 17 3 1 #"e"
0 0 17 3 9 #"\" (cons \""
0 0 17 3 33 #"l\" (cons \"l\" (cons \"o\" (cons \" \" "
0 0 23 29 1 #"\n"
0 0 17 3 43 #";;                   (cons \"w\" empty)))))))"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;    e2pre \""
0 0 17 3 1 #"5"
0 0 17 3 12 #"\" -> (cons \""
0 0 17 3 1 #"0"
0 0 17 3 9 #"\" (cons \""
0 0 17 3 1 #"1"
0 0 17 3 9 #"\" (cons \""
0 0 17 3 33 #"2\" (cons \"3\" (cons \"4\" (cons \"5\" "
0 0 23 29 1 #"\n"
0 0 17 3 32 #";;                   empty))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cons-tail"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 1 #"v"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 9 #"cons-tail"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 14 3 1 #"v"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cons-tail"
0 0 23 3 1 #" "
0 0 14 3 5 #"e1pre"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 8 #"))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cons-tail"
0 0 23 3 1 #" "
0 0 14 3 5 #"e2pre"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; Lo1String MANIPULATION FUNCTIONS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; lo1s-to-str : Lo1String -> String"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; Purpose     : Produce a string representation of the given Lo1Str"
 #"ing"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    e1pre -> \"hello \""
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;    e2pre -> \"01234\""
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;    empty -> \"\""
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 1 #" "
0 0 14 3 5 #"e1pre"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 8 #"\"hello \""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 1 #" "
0 0 14 3 5 #"e2pre"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 7 #"\"01234\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 2 #"\"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #"; Editor MANIPULATION FUNCTIONS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";; cursor-left : Editor -> Editor"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; Purpose     : Moves the cursor left if not already left of all th"
 #"e text"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 67
(
 #";;    e1    -> (make-editor (all-but-last e1pre) (cons \" \" e1post)"
 #")"
) 0 0 23 29 1 #"\n"
0 0 17 3 67
(
 #";;    e2    -> (make-editor (all-but-last e2pre) (cons \"4\" e2post)"
 #")"
) 0 0 23 29 1 #"\n"
0 0 17 3 20 #";;    nopre -> nopre"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"cursor-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #")) "
0 0 14 3 1 #"e"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"last"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 4 #")) ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"cursor-left"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 8 #"))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"cursor-left"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 8 #"))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"cursor-left"
0 0 23 3 1 #" "
0 0 14 3 5 #"nopre"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; cursor-right : Editor -> Editor"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; Purpose      : Moves the cursor right if not already right of all"
 #" the text"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";;    e1     -> (make-editor (cons-tail e1pre \"w\") (rest e1post))"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";;    e2     -> (make-editor (cons-tail e2pre \"5\") (rest e2post))"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;    nopost -> nopost"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cursor-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #")) "
0 0 14 3 1 #"e"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cons-tail"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cursor-right"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cursor-right"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cursor-right"
0 0 23 3 1 #" "
0 0 14 3 6 #"nopost"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; type-unsafe : Editor Key -> Editor"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; Purpose     : Inserts the given key string immediately before the"
 #" cursor "
) 0 0 23 29 1 #"\n"
0 0 17 3 60
#";;               regardless of size constraints for the text"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";;    e1 \"1\"   -> (make-editor (cons-tail e1pre \"1\") e1post)"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";;    e2 \"h\"   -> (make-editor (cons-tail e2pre \"h\") e2post)"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";;    long \"2\" -> (make-editor (cons-tail longpre \"2\") longpost)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"type-unsafe"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-editor"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cons-tail"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #") "
0 0 14 3 3 #"key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"type-unsafe"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"type-unsafe"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"type-unsafe"
0 0 23 3 1 #" "
0 0 14 3 4 #"long"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 42 #"))))))))))))))))))))))))))))))))))))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";; type    : Editor Key -> Editor"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; Purpose : Inserts the given key string immediately before the cur"
 #"sor"
) 0 0 23 29 1 #"\n"
0 0 17 3 66
#";;           if the resulting text will fit in the allocated space"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";;    e1 \"1\"    -> (make-editor (cons-tail e1pre \"1\") e1post)"
0 0 23 29 1 #"\n"
0 0 17 3 61
#";;    e2 \"h\"    -> (make-editor (cons-tail e2pre \"h\") e2post)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    long1 \"2\" -> long1"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"type"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 2 #" ("
0 0 14 3 18 #"editor-text->image"
0 0 23 3 2 #" ("
0 0 14 3 11 #"type-unsafe"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                             "
0 0 14 3 3 #"key"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_PAD_X"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 14 3 12 #"EDITOR_WIDTH"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 1 #"e"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"type-unsafe"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                           "
0 0 14 3 3 #"key"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"type"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"type"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"type"
0 0 23 3 1 #" "
0 0 14 3 4 #"long"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 41 #")))))))))))))))))))))))))))))))))))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";; delete  : Editor -> Editor"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";; Purpose : Deletes the character immediately before the cursor if "
 #"one exists"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";;    e1    -> (make-editor (all-but-last e1pre) e1post)"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";;    e2    -> (make-editor (all-but-last e2pre) e2post)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";;    nopre -> nopre"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #")) "
0 0 14 3 1 #"e"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 4 #")) ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"3\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"6\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"7\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 23 3 1 #" "
0 0 14 3 5 #"nopre"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; key-is-char? : Key -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; Purpose      : Determines if the given key is a character"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    \"shift\"   -> false"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    \"control\" -> false"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    \"menu\"    -> false"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    \"\\r\"      -> false"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    \"a\"       -> true"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    \"1\"       -> true"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    \"-\"       -> true"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"shift\""
0 0 23 3 4 #")   "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"control\""
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"menu\""
0 0 23 3 5 #")    "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 23 3 7 #")      "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 8 #")       "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 23 3 8 #")       "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 23 3 8 #")       "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";; edit    : Editor Key -> Editor"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";; Purpose : Performs the proper action for the given key event"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";;    e1 \"left\"    -> (make-edit"
 #"or (all-but-last e1pre) (cons \" \" e1post))"
) 0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";;    e1 \"right\"   -> (make-editor (cons-tail e1pre \"w\") (rest e"
 #"1post))"
) 0 0 23 29 1 #"\n"
0 0 17 3 63
#";;    e1 \"\\b\"      -> (make-editor (all-but-last e1pre) e1post)"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";;    e1 \"a\"       -> (make-editor (cons-tail e1pre \"a\") e1post)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    e1 \"control\" -> e1"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 23 3 3 #") ("
0 0 14 3 11 #"cursor-left"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 23 3 3 #") ("
0 0 14 3 12 #"cursor-right"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 23 3 3 #") ("
0 0 14 3 6 #"delete"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 12 #"key-is-char?"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 3 #") ("
0 0 14 3 4 #"type"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 8 #"))))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"control\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 11 #"make-editor"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 7 #")))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; string->image  : String -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; Purpose        : Renders the given string as an image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string->image"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 14 3 3 #"str"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 21 3 2 #"20"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 19 3 7 #"\"black\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; TESTS (may fail depending upon host machine's text rendering)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string->image"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"hello \""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 12           4 25 921
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 5.0 11.5 #(struct:text \"h\" 0 1 \"black\" 20 #f swi"
 #"ss normal normal #f))) #(struct:translate 10.0 0.0 #(struct:translat"
 #"e 5.5 11.5 #(struct:text \"e\" 0 1 \"black\" 20 #f swiss normal norm"
 #"al #f))))) #(struct:translate 21.0 0.0 #(struct:translate 2.0 11.5 #"
 #"(struct:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #"
 #"(struct:translate 25.0 0.0 #(struct:translate 2.0 11.5 #(struct:text"
 #" \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 29.0 0.0 #(struct:translate"
 #" 5.5 11.5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss normal norma"
 #"l #f))))) #(struct:translate 40.0 0.0 #(struct:translate 3.0 11.5 #("
 #"struct:text \" \" 0 1 \"black\" 20 #f swiss normal normal #f)))) #(s"
 #"truct:bb 46.0 23.0 19.0) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string->image"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"01234\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 12           4 25 761
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:"
 #"translate 5.5 11.5 #(struct:text \"0\" 0 1 \"black\" 20 #f swiss nor"
 #"mal normal #f))) #(struct:translate 11.0 0.0 #(struct:translate 5.5 "
 #"11.5 #(struct:text \"1\" 0 1 \"black\" 20 #f swiss normal normal #f)"
 #")))) #(struct:translate 22.0 0.0 #(struct:translate 5.5 11.5 #(struc"
 #"t:text \"2\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struc"
 #"t:translate 33.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"3\""
 #" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translate "
 #"44.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"4\" 0 1 \"black"
 #"\" 20 #f swiss normal normal #f)))) #(struct:bb 55.0 23.0 19.0) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; editor-text->image : Editor -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";; Purpose            : Renders the text in the given editor as an i"
 #"mage"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"editor-text->image"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 13 #"string->image"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 33 #"                                ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; TESTS (may fail depending upon host machine's text rendering)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"editor-text->image"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 12           4 25 1721
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 5.0 11.5 #(struct:text \"h\" 0 1 \"black\" 20 #f swiss n"
 #"ormal normal #f))) #(struct:translate 10.0 0.0 #(struct:translate 5."
 #"5 11.5 #(struct:text \"e\" 0 1 \"black\" 20 #f swiss normal normal #"
 #"f))))) #(struct:translate 21.0 0.0 #(struct:translate 2.0 11.5 #(str"
 #"uct:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(str"
 #"uct:translate 25.0 0.0 #(struct:translate 2.0 11.5 #(struct:text \"l"
 #"\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translat"
 #"e 29.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"o\" 0 1 \"bla"
 #"ck\" 20 #f swiss normal normal #f))))) #(struct:translate 40.0 0.0 #"
 #"(struct:translate 3.0 11.5 #(struct:text \" \" 0 1 \"black\" 20 #f s"
 #"wiss normal normal #f))))) #(struct:translate 46.0 0.0 #(struct:tran"
 #"slate 7.5 11.5 #(struct:text \"w\" 0 1 \"black\" 20 #f swiss normal "
 #"normal #f))))) #(struct:translate 61.0 0.0 #(struct:translate 5.5 11"
 #".5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss normal normal #f)))"
 #")) #(struct:translate 72.0 0.0 #(struct:translate 3.5 11.5 #(struct:"
 #"text \"r\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:"
 #"translate 79.0 0.0 #(struct:translate 2.0 11.5 #(struct:text \"l\" 0"
 #" 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translate 83"
 #".0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"d\" 0 1 \"black\""
 #" 20 #f swiss normal normal #f)))) #(struct:bb 94.0 23.0 19.0) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 18 #"editor-text->image"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 12           4 25 1562
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 5.5 11.5 #(struct:text \"0\""
 #" 0 1 \"black\" 20 #f swiss normal normal #f))) #(struct:translate 11"
 #".0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"1\" 0 1 \"black\""
 #" 20 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0 #(str"
 #"uct:translate 5.5 11.5 #(struct:text \"2\" 0 1 \"black\" 20 #f swiss"
 #" normal normal #f))))) #(struct:translate 33.0 0.0 #(struct:translat"
 #"e 5.5 11.5 #(struct:text \"3\" 0 1 \"black\" 20 #f swiss normal norm"
 #"al #f))))) #(struct:translate 44.0 0.0 #(struct:translate 5.5 11.5 #"
 #"(struct:text \"4\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #"
 #"(struct:translate 55.0 0.0 #(struct:translate 5.5 11.5 #(struct:text"
 #" \"5\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 66.0 0.0 #(struct:translate"
 #" 5.5 11.5 #(struct:text \"6\" 0 1 \"black\" 20 #f swiss normal norma"
 #"l #f))))) #(struct:translate 77.0 0.0 #(struct:translate 5.5 11.5 #("
 #"struct:text \"7\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #("
 #"struct:translate 88.0 0.0 #(struct:translate 5.5 11.5 #(struct:text "
 #"\"8\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:trans"
 #"late 99.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"9\" 0 1 \""
 #"black\" 20 #f swiss normal normal #f)))) #(struct:bb 110.0 23.0 19.0"
 #") #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; editor->scene : Editor -> Scene"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; Purpose       : Renders the given editor as a scene"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"editor->scene"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 17 #"place-image/align"
0 0 23 3 1 #" "
0 0 14 3 12 #"CURSOR_IMAGE"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 23 3 2 #" ("
0 0 14 3 13 #"string->image"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lo1s-to-str"
0 0 23 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                        "
0 0 14 3 12 #"EDITOR_PAD_X"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 13 #"EDITOR_HEIGHT"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 19 3 6 #"\"left\""
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                     "
0 0 19 3 8 #"\"center\""
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 17 #"place-image/align"
0 0 23 3 2 #" ("
0 0 14 3 18 #"editor-text->image"
0 0 23 3 1 #" "
0 0 14 3 1 #"e"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 14 3 12 #"EDITOR_PAD_X"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 14 3 12 #"EDITOR_PAD_Y"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 19 3 6 #"\"left\""
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 19 3 5 #"\"top\""
0 0 23 29 1 #"\n"
0 0 23 3 41 #"                                        ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 14 3 12 #"EDITOR_WIDTH"
0 0 23 29 1 #"\n"
0 0 23 3 53 #"                                                     "
0 0 14 3 13 #"EDITOR_HEIGHT"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"editor->scene"
0 0 23 3 1 #" "
0 0 14 3 2 #"e1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 12           4 25 2756
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 33) #(struct:point 0 33)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 50 4 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 1 0) #(struct:point 1 25) #(s"
 #"truct:point 0 25)) 255 \"red\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 33)"
 #" #(struct:point 0 33)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 4 4 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 5.0 11.5 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 20 #f swiss normal normal #f))) #(struct:translate 10.0 0.0 #(st"
 #"ruct:translate 5.5 11.5 #(struct:text \"e\" 0 1 \"black\" 20 #f swis"
 #"s normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:transla"
 #"te 2.0 11.5 #(struct:text \"l\" 0 1 \"black\" 20 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 25.0 0.0 #(struct:translate 2.0 11.5 "
 #"#(struct:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) "
 #"#(struct:translate 29.0 0.0 #(struct:translate 5.5 11.5 #(struct:tex"
 #"t \"o\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 40.0 0.0 #(struct:translate 3.0 11.5 #(struct:text \" \" 0 1 "
 #"\"black\" 20 #f swiss normal normal #f))))) #(struct:translate 46.0 "
 #"0.0 #(struct:translate 7.5 11.5 #(struct:text \"w\" 0 1 \"black\" 20"
 #" #f swiss normal normal #f))))) #(struct:translate 61.0 0.0 #(struct"
 #":translate 5.5 11.5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 72.0 0.0 #(struct:translate 3"
 #".5 11.5 #(struct:text \"r\" 0 1 \"black\" 20 #f swiss normal normal "
 #"#f))))) #(struct:translate 79.0 0.0 #(struct:translate 2.0 11.5 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 83.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \""
 #"d\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(st"
 #"ruct:point 200 33) #(struct:point 0 33)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 20"
 #"0 33) #(struct:point 0 33)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:point 0 0) #(struct:point 200 0) #(struct:point "
 #"200 33) #(struct:point 0 33)) 255 \"white\")))))))))))))) #(struct:b"
 #"b 200 33 33.0) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"editor->scene"
0 0 23 3 1 #" "
0 0 14 3 2 #"e2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 12           4 25 2596
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 33) #(struct:point 0 33)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 59 4 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 1 0) #(struct:point 1 25) #(s"
 #"truct:point 0 25)) 255 \"red\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 33)"
 #" #(struct:point 0 33)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 4 4 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 5.5 11.5 #("
 #"struct:text \"0\" 0 1 \"black\" 20 #f swiss normal normal #f))) #(st"
 #"ruct:translate 11.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \""
 #"1\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:transla"
 #"te 22.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"2\" 0 1 \"bl"
 #"ack\" 20 #f swiss normal normal #f))))) #(struct:translate 33.0 0.0 "
 #"#(struct:translate 5.5 11.5 #(struct:text \"3\" 0 1 \"black\" 20 #f "
 #"swiss normal normal #f))))) #(struct:translate 44.0 0.0 #(struct:tra"
 #"nslate 5.5 11.5 #(struct:text \"4\" 0 1 \"black\" 20 #f swiss normal"
 #" normal #f))))) #(struct:translate 55.0 0.0 #(struct:translate 5.5 1"
 #"1.5 #(struct:text \"5\" 0 1 \"black\" 20 #f swiss normal normal #f))"
 #"))) #(struct:translate 66.0 0.0 #(struct:translate 5.5 11.5 #(struct"
 #":text \"6\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct"
 #":translate 77.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"7\" "
 #"0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translate 8"
 #"8.0 0.0 #(struct:translate 5.5 1"
 #"1.5 #(struct:text \"8\" 0 1 \"black\" 20 #f swiss normal normal #f))"
 #"))) #(struct:translate 99.0 0.0 #(struct:translate 5.5 11.5 #(struct"
 #":text \"9\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 200"
 #" 0) #(struct:point 200 33) #(struct:point 0 33)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:point 0 0) #(struct:point 200 0) #(struct:"
 #"point 200 33) #(struct:point 0 33)) outline #(struct:pen \"black\" 2"
 #" solid round round)))) #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:point 0 0) #(struct:point 200 0) #(struc"
 #"t:point 200 33) #(struct:point 0 33)) 255 \"white\")))))))))))))) #("
 #"struct:bb 200 33 33.0) #f)"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #"; UNIVERSE CREATION"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; Create an editor"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 23 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 13 #"editor->scene"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 6 #"on-key"
0 0 23 3 1 #" "
0 0 14 3 4 #"edit"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"Text Editor\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #"; DESIGN DISCUSSION"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; After having implemented a few list manipulation functions, this "
 #"design "
) 0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; approach made all of the editor manipulation functions simpler. H"
 #"owever, "
) 0 0 23 29 1 #"\n"
0 0 17 3 50 #";; writing out test data was much more cumbersome."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#######################################################"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#                  POCKET CALCULATOR                  #"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";#######################################################"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #"; DATA DEFINITIONS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #"#| WITHOUT VARIABES --------------------"
0 0 17 29 1 #"\n"
0 0 17 3 27 #";; An Expression is one of:"
0 0 17 29 1 #"\n"
0 0 17 3 13 #";;   - Number"
0 0 17 29 1 #"\n"
0 0 17 3 28 #";;   - (make-neg Expression)"
0 0 17 29 1 #"\n"
0 0 17 3 39 #";;   - (make-add Expression Expression)"
0 0 17 29 1 #"\n"
0 0 17 3 39 #";;   - (make-sub Expression Expression)"
0 0 17 29 1 #"\n"
0 0 17 3 39 #";;   - (make-mul Expression Expression)"
0 0 17 29 1 #"\n"
0 0 17 3 39 #";;   - (make-div Expression Expression)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(define (exp-temp a-exp)"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"  ... (eval-arith a-exp) ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"|#;-------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";| WITH VARIABLES ----------------------"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; An Expression is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;   - Number"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";;   - String   (this is a variable name)"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;   - (make-neg Expression)"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   - (make-add Expression Expression)"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   - (make-sub Expression Expression)"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   - (make-mul Expression Expression)"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   - (make-div Expression Expression)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(define (exp-temp a-exp)"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"  ... (eval-arith a-exp) ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";#;-------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 3 #"neg"
0 0 23 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; A Negation is a (make-neg Expression) with:"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   exp : The expression to be negated"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(define (neg-temp a-neg)"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"  ... (neg-exp    a-neg) ..."
0 0 17 29 1 #"\n"
0 0 17 3 28 #"  ... (eval-arith a-neg) ..."
0 0 17 29 1 #"\n"
0 0 17 3 39 #"  ... (eval-arith (neg-exp a-neg) ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"neg-1"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-neg"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 3 #"add"
0 0 23 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 23 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; An Addition is a (make-add Expression Expression) with:"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;   exp1 : One addend"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;   exp2 : The other addend"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(define (add-temp a-add)"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"  ... (add-exp1   a-add) ..."
0 0 17 29 1 #"\n"
0 0 17 3 28 #"  ... (add-exp2   a-add) ..."
0 0 17 29 1 #"\n"
0 0 17 3 29 #"  ... (eval-arith a-add) ... "
0 0 17 29 1 #"\n"
0 0 17 3 39 #"  ... (eval-arith (add-exp1 a-add) ... "
0 0 17 29 1 #"\n"
0 0 17 3 40 #"  ... (eval-arith (add-exp2 a-add) ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"add-1-2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"add-1-2-3-4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 3 #"sub"
0 0 23 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 23 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; A Subtraction is a (make-sub Expression Expression) with:"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;   exp1 : The minuend"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";;   exp2 : The subtrahend"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"(define (sub"
0 0 17 3 11 #"-temp a-sub"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"  ... (sub"
0 0 17 3 13 #"-exp1   a-sub"
0 0 17 3 5 #") ..."
0 0 17 29 1 #"\n"
0 0 17 3 10 #"  ... (sub"
0 0 17 3 13 #"-exp2   a-sub"
0 0 17 3 5 #") ..."
0 0 17 29 1 #"\n"
0 0 17 3 23 #"  ... (eval-arith a-sub"
0 0 17 3 6 #") ... "
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  ... (eval-arith (sub"
0 0 17 3 11 #"-exp1 a-sub"
0 0 17 3 6 #") ... "
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  ... (eval-arith (sub"
0 0 17 3 11 #"-exp2 a-sub"
0 0 17 3 7 #") ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"sub-1-2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-sub"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"sub-1-2-3-4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-sub"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-sub"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 8 #"make-sub"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 3 #"mul"
0 0 23 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 23 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";; A Multiplication is a (make-mul Expression Expression) with:"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;   exp1 : One multiplicand"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";;   exp2 : The other multiplicand"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"(define (mul"
0 0 17 3 11 #"-temp a-mul"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"  ... (mul"
0 0 17 3 13 #"-exp1   a-mul"
0 0 17 3 5 #") ..."
0 0 17 29 1 #"\n"
0 0 17 3 10 #"  ... (mul"
0 0 17 3 13 #"-exp2   a-mul"
0 0 17 3 5 #") ..."
0 0 17 29 1 #"\n"
0 0 17 3 23 #"  ... (eval-arith a-mul"
0 0 17 3 6 #") ... "
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  ... (eval-arith (mul"
0 0 17 3 11 #"-exp1 a-mul"
0 0 17 3 6 #") ... "
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  ... (eval-arith (mul"
0 0 17 3 11 #"-exp2 a-mul"
0 0 17 3 7 #") ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"mul-1-2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"mul-1-2-3-4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 3 #"div"
0 0 23 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 23 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; A Division is a (make-div Expression Expression) with:"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;   exp1 : The dividend"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;   exp2 : The divisor"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; TEMPLATE"
0 0 23 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"(define (div"
0 0 17 3 11 #"-temp a-div"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"  ... (div"
0 0 17 3 13 #"-exp1   a-div"
0 0 17 3 5 #") ..."
0 0 17 29 1 #"\n"
0 0 17 3 10 #"  ... (div"
0 0 17 3 13 #"-exp2   a-div"
0 0 17 3 5 #") ..."
0 0 17 29 1 #"\n"
0 0 17 3 23 #"  ... (eval-arith a-div"
0 0 17 3 6 #") ... "
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  ... (eval-arith (div"
0 0 17 3 11 #"-exp1 a-div"
0 0 17 3 6 #") ... "
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  ... (eval-arith (div"
0 0 17 3 11 #"-exp2 a-div"
0 0 17 3 7 #") ... )"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"div-1-2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-div"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"div-1-2-3-4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-div"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-div"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 8 #"make-div"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; An example of an expression including all expression types (excep"
 #"t variables)"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"exp-complex"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                  "
0 0 14 3 5 #"neg-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 41 #"                                        ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 14 3 11 #"add-1-2-3-4"
0 0 23 29 1 #"\n"
0 0 23 3 50 #"                                                  "
0 0 14 3 11 #"sub-1-2-3-4"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 14 3 11 #"mul-1-2-3-4"
0 0 23 29 1 #"\n"
0 0 23 3 40 #"                                        "
0 0 14 3 11 #"div-1-2-3-4"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; Examples of expressions including variables"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"mul-2-x-sqr"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"x"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 2 #"\"x"
0 0 19 3 1 #"\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"var-all-exp"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-neg"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"var"
0 0 19 3 1 #"\""
0 0 23 29 1 #"\n"
0 0 23 3 41 #"                                        ("
0 0 14 3 8 #"make-sub"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"var"
0 0 19 3 1 #"\""
0 0 23 29 1 #"\n"
0 0 23 3 51 #"                                                  ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"var"
0 0 19 3 1 #"\""
0 0 23 29 1 #"\n"
0 0 23 3 61
#"                                                            ("
0 0 14 3 8 #"make-div"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"var"
0 0 19 3 1 #"\""
0 0 23 29 1 #"\n"
0 0 23 3 70
(
 #"                                                                    "
 #"  "
) 0 0 21 3 1 #"1"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"det"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-sub"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"b"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 2 #"\"b"
0 0 19 3 1 #"\""
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"a"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 2 #"\"c"
0 0 19 3 1 #"\""
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; FUNCTIONS"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; eval-arith : Expression -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; Purpose    : Computes the numerical result of the given expressio"
 #"n"
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;    1           -> 1"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    neg-1       -> -1"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    add-1-2-3-4 -> 10"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;    sub-1-2-3-4 -> 0"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;    mul-1-2-3-4 -> 24"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;    div-1-2-3-4 -> 2/3"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";;    exp-complex -> 104/3"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"exp"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"neg?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 7 #"neg-exp"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"add?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"add-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"add-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"sub?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sub-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sub-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"mul?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"mul-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"mul-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"div?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"div-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 2 #" ("
0 0 14 3 8 #"div-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #") "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 5 #"neg-1"
0 0 23 3 2 #") "
0 0 21 3 2 #"-1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 11 #"add-1-2-3-4"
0 0 23 3 2 #") "
0 0 21 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 11 #"sub-1-2-3-4"
0 0 23 3 2 #") "
0 0 21 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 11 #"mul-1-2-3-4"
0 0 23 3 2 #") "
0 0 21 3 2 #"24"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 11 #"div-1-2-3-4"
0 0 23 3 2 #") "
0 0 21 3 3 #"2/3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 10 #"eval-arith"
0 0 23 3 1 #" "
0 0 14 3 11 #"exp-complex"
0 0 23 3 2 #") "
0 0 21 3 5 #"104/3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; plug-in : Expression String Number -> Expression"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; Purpose : Replaces all strings (variables) in the given expressio"
 #"n that match"
) 0 0 23 29 1 #"\n"
0 0 17 3 51 #";;           the given string with the given number"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;    neg-1 \""
0 0 17 3 4 #"x\" 5"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;        -> (make-neg 1)"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;    mul-2-x-sqr \""
0 0 17 3 4 #"x\" 5"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";;        -> (make-mul 2 (make-mul 5 5))"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;    var-all-exp \""
0 0 17 3 6 #"var\" 2"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;        "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-neg"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-add"
0 0 17 3 2 #" 2"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-sub"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #" ("
0 0 17 3 29 #"make-mul 2 (make-div 2 1)))))"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";;    (plug-in (plug-in det \""
0 0 17 3 1 #"a"
0 0 17 3 6 #"\" 1) \""
0 0 17 3 1 #"b"
0 0 17 3 6 #"\" 3) \""
0 0 17 3 4 #"c\" 2"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";;        -> (make-sub (make-mul 3 3) (make-mul 4 (make-mul 1 2)))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 1 #" "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"exp"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 7 #"string?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 1 #" "
0 0 14 3 3 #"var"
0 0 23 3 2 #") "
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"neg?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-neg"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 7 #"neg-exp"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"add?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-add"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"add-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"add-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"sub?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-sub"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sub-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"sub-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"mul?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-mul"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"mul-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"mul-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 4 #"div?"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-div"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"div-exp1"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 8 #"div-exp2"
0 0 23 3 1 #" "
0 0 14 3 3 #"exp"
0 0 23 3 2 #") "
0 0 14 3 3 #"var"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 1 #" "
0 0 14 3 5 #"neg-1"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"x"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"make-neg"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 1 #" "
0 0 14 3 11 #"mul-2-x-sqr"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"x"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 1 #" "
0 0 21 3 1 #"5"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 1 #" "
0 0 14 3 11 #"var-all-exp"
0 0 23 3 1 #" "
0 0 19 3 4 #"\"var"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"make-neg"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-add"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-sub"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-div"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 6 #"))))))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 2 #" ("
0 0 14 3 7 #"plug-in"
0 0 23 3 1 #" "
0 0 14 3 3 #"det"
0 0 23 3 1 #" "
0 0 19 3 2 #"\"a"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #") "
0 0 19 3 2 #"\"b"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 2 #"c\""
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 8 #"make-sub"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 3 #") ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #" ("
0 0 14 3 8 #"make-mul"
0 0 23 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0           0
